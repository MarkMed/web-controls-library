/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */


import {
  Button as GxButton
} from './components/button/button';

declare global {
  interface HTMLGxButtonElement extends GxButton, HTMLElement {
  }
  var HTMLGxButtonElement: {
    prototype: HTMLGxButtonElement;
    new (): HTMLGxButtonElement;
  };
  interface HTMLElementTagNameMap {
    "gx-button": HTMLGxButtonElement;
  }
  interface ElementTagNameMap {
    "gx-button": HTMLGxButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "gx-button": JSXElements.GxButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface GxButtonAttributes extends HTMLAttributes {
      disabled?: boolean;
      imagePosition?: "above" | "before" | "after" | "below" | "behind";
      invisibleMode?: "collapse" | "keep-space";
    }
  }
}


import {
  TextBlock as GxTextblock
} from './components/textblock/textblock';

declare global {
  interface HTMLGxTextblockElement extends GxTextblock, HTMLElement {
  }
  var HTMLGxTextblockElement: {
    prototype: HTMLGxTextblockElement;
    new (): HTMLGxTextblockElement;
  };
  interface HTMLElementTagNameMap {
    "gx-textblock": HTMLGxTextblockElement;
  }
  interface ElementTagNameMap {
    "gx-textblock": HTMLGxTextblockElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "gx-textblock": JSXElements.GxTextblockAttributes;
    }
  }
  namespace JSXElements {
    export interface GxTextblockAttributes extends HTMLAttributes {
      disabled?: boolean;
      href?: string;
      invisibleMode?: "collapse" | "keep-space";
    }
  }
}

